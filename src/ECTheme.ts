import { type ExpressiveCodeEngineConfig } from '@expressive-code/core';

export const EC_THEME: ExpressiveCodeEngineConfig['styleOverrides'] = {
	borderColor: 'var(--shiki-code-block-border-color)',
	borderRadius: 'var(--shiki-code-block-border-radius)',
	borderWidth: 'var(--shiki-code-block-border-width)',
	codeBackground: 'var(--code-background)',
	codeFontFamily: 'var(--font-monospace)',
	codeFontSize: 'var(--code-size)',
	codeFontWeight: 'var(--font-normal)',
	codeForeground: 'var(--code-normal)',
	codeLineHeight: 'var(--line-height-normal)',
	codePaddingBlock: 'var(--size-4-3)',
	codePaddingInline: 'var(--size-4-4)',
	codeSelectionBackground: 'var(--text-selection)',
	focusBorder: 'var(--background-modifier-border)',
	scrollbarThumbColor: 'var(--scrollbar-thumb-bg)',
	scrollbarThumbHoverColor: 'var(--scrollbar-active-thumb-bg)',
	uiFontFamily: 'var(--font-interface)',
	uiFontSize: 'var(--font-text-size)',
	uiFontWeight: 'var(--font-normal)',
	uiLineHeight: 'var(--line-height-normal)',
	uiPaddingBlock: 'var(--size-4-2)',
	uiPaddingInline: 'var(--size-4-4)',
	uiSelectionBackground: 'var(--text-selection)',
	uiSelectionForeground: 'var(--text-normal)',
	gutterBorderColor: 'var(--shiki-gutter-border-color)',
	gutterBorderWidth: 'var(--shiki-gutter-border-width)',
	gutterForeground: 'var(--shiki-gutter-text-color)',
	gutterHighlightForeground: 'var(--shiki-gutter-text-color-highlight)',
	textMarkers: {
		delBackground: 'var(--shiki-highlight-red-background)',
		delBorderColor: 'var(--shiki-highlight-red)',
		delDiffIndicatorColor: 'rgba(var(--shiki-highlight-red-rgb), 1)',
		inlineMarkerBorderWidth: 'var(--border-width)',
		insBackground: 'var(--shiki-highlight-green-background)',
		insBorderColor: 'var(--shiki-highlight-green)',
		insDiffIndicatorColor: 'rgba(var(--shiki-highlight-green-rgb), 1)',
		lineDiffIndicatorMarginLeft: '0.3rem',
		lineMarkerAccentMargin: '0rem',
		lineMarkerAccentWidth: '0.15rem',
		lineMarkerLabelColor: 'white',
		lineMarkerLabelPaddingInline: '0.2rem',
		markBackground: 'var(--shiki-highlight-neutral-background)',
		markBorderColor: 'var(--shiki-highlight-neutral)',
	},
	frames: {
		editorActiveTabBackground: 'var(--code-background)',
		editorActiveTabBorderColor: 'transparent',
		editorActiveTabForeground: 'var(--text-normal)',
		editorActiveTabIndicatorBottomColor: 'transparent',
		editorActiveTabIndicatorHeight: '2px',
		editorActiveTabIndicatorTopColor: 'var(--shiki-highlight-neutral)',
		editorBackground: 'var(--code-background)',
		editorTabBarBackground: 'var(--color-primary)',
		editorTabBarBorderBottomColor: 'transparent',
		editorTabBarBorderColor: 'transparent',
		editorTabBorderRadius: 'var(--shiki-code-border-radius)',
		editorTabsMarginBlockStart: '0',
		editorTabsMarginInlineStart: '0',
		frameBoxShadowCssValue: 'none',
		inlineButtonBackground: 'var(--interactive-normal)',
		inlineButtonBackgroundActiveOpacity: '1',
		inlineButtonBackgroundHoverOrFocusOpacity: '1',
		inlineButtonBackgroundIdleOpacity: '1',
		inlineButtonBorder: 'var(--shiki-code-border-color)',
		inlineButtonBorderOpacity: '1',
		inlineButtonForeground: 'var(--text-normal)',
		shadowColor: 'transparent',
		terminalBackground: 'var(--code-background)',
		terminalTitlebarBackground: 'var(--code-background)',
		terminalTitlebarBorderBottomColor: 'transparent',
		terminalTitlebarDotsForeground: 'var(--shiki-terminal-dots-color)',
		terminalTitlebarDotsOpacity: '1',
		terminalTitlebarForeground: 'var(--text-normal)',
		tooltipSuccessBackground: 'var(--shiki-tooltip-background)',
		tooltipSuccessForeground: 'var(--shiki-tooltip-text-color)',
	},
};
